# name: Java CI with Gradle

# on:
#   push:
#     paths-ignore:
#       - '*.md'
#     branches: [ "master" ]
#   pull_request:
#     branches: [ "master" ]

# permissions:
#   contents: read
# env:
#   PROJECT_ID: ${{ secrets.PROJECT_ID }}
#   GCE_INSTANCE: remember-me
#   GCE_INSTANCE_ZONE: asia-northeast3-a
  
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v3
#     - name: Set up JDK 11
#       uses: actions/setup-java@v3
#       with:
#         java-version: '11'
#         distribution: 'temurin'
#     # gradle 의존성 캐싱
#     - name: gradle caching
#       uses: actions/cache@v3
#       with:
#         path: |  # 캐싱할 파일 경로
#           ~/.gradle/caches
#           ~/.gradle/wrapper
#         key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
#         restore-keys: |
#           ${{ runner.os }}-gradle-
#     # 권한 설정
#     - name: Grant execute permission for gradlew
#       run: chmod +x gradlew
#     # 빌드 - 테스트 제외
#     - name: Build with Gradle
#       run: ./gradlew build -x test
#     # Buildx 설정
#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v1
#     # 도커 허브 로그인
#     - name: Login to DockerHub
#       uses: docker/login-action@v1
#       with:
#         username: ${{ secrets.DOCKERHUB_USERNAME }}
#         password: ${{ secrets.DOCKERHUB_TOKEN }}
#     # 도커 빌드 및 푸시 - Guthub Actions 캐시 적용
#     - name: Build and push
#       uses: docker/build-push-action@v2 # build-push-action 사용
#       with:
#         context: .
#         push: true
#         tags: ${{ secrets.DOCKERHUB_USERNAME }}/remember-me:latest
#         cache-from: type=gha # 캐시 적용
#         cache-to: type=gha,mode=max
        
#   deploy:
#     needs: [ build ]
#     runs-on: ubuntu-latest
#     steps:
#     # SSH 접속 후, 배포
#     - name: Deploy
#       uses: appleboy/ssh-action@master
#       with:
#         host: ${{ secrets.SERVER_HOST }}
#         username: ${{ secrets.SERVER_USERNAME }}
#         key: ${{ secrets.GCE_PRIVATE_KEY }}
#         port: ${{ secrets.SERVER_PORT }}
#         script: |
#             sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/remember-me:latest
#             sudo docker tag ${{ secrets.DOCKERHUB_USERNAME }}/remember-me:latest remember-me
#             sudo docker-compose up -d
